// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address, a=o1, b=o2, c=o3, d=o4, e=o5, f=o6, g=o7, h=o8);
    Register(in=in, load=o1, out=o11);
    Register(in=in, load=o2, out=o22);
    Register(in=in, load=o3, out=o33);
    Register(in=in, load=o4, out=o44);
    Register(in=in, load=o5, out=o55);
    Register(in=in, load=o6, out=o66);
    Register(in=in, load=o7, out=o77);
    Register(in=in, load=o8, out=o88);
    Mux8Way16(a=o11, b=o22, c=o33, d=o44, e=o55, f=o66, g=o77, h=o88, sel=address, out=out);

}